package 풀이;

public class asdf1 {

	public static void main(String[] args) {
		
		//class - 설계도면
		//object(객체) - 클래스를 기반으로 실제로 메모리에 할당되는것
		
		/*객체지향프로그래밍의 특징
		 * 1.캡슐화(Encapsulation) : 두개를 묶어 한개로 캡슐처럼 하나로 묶는방법
		 * 						   만일의 상황을 대비해서 특정 속성이나 메소드를 사용자가 조작할 수 없도록 숨겨 놓은것
		 * 
		 * 2.정보은닉 : 캡슐화로 만들었을때처럼 실제 구현 내용을 외부로부터 감추는 기법
		 * 
		 * 3.상속(Inheritance) : 이미 작성된 클래스(상위클래스)의 특성을 그대로 이어받아 새로운 클래스(하위클래스)를 생성하는 기법
		 * 						기존 코드를 그대로 재사용하거나 재정의 -> 재사용 + 확장
		 * 
		 * 4.추상화(Abstraction) : 객체에서 공통된 속성(field,data)과 행위(method,logic)를 추출하는 기법
		 * 						 상세한 정보는 무시하고 필요한 정보들만 간추려서 구성
		 * 						 코드 상에서 구현부분을 제외한 오직 선언 부분만을 설계
		 * 
		 * 5.다형성(Polymorphism) : 사전적 의미 '다양한 형태로 나타날 수 있는 능력'
		 * 						  같은 기능(메소드)를 호출하더라도 객체에 따라 다르게 동작하는것
		 * 						  상위 클래스의 동작을 하위클래스에서 다시 정의하여 사용하는것 또한 다형성으로 볼수있다.
		 *
		 *객체지향프로그래밍의 장점
		 *1.신뢰성있는 소프트웨어를 작성할 수 있다.
		 *2.코드를 재사용하기 쉽다.
		 *3.유지보수가 용이하다.
		 *4.직관적은 코드 분석이 가능하다.
		 *5.소프트웨어 생산성이 향상된다.
		 *
		 *
		 *
		 */
		
		
	}

}
