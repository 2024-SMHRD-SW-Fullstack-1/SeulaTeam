package playgame;

import java.util.Scanner;

public class GameMain {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		
		// V) 게임 첫 화면 출력

		// 회원가입
		// V) 회원가입 화면 출력

		// 아이디 중복 확인
		// V) 아이디 입력 받기 - Scanner
		// C) DB MEMBER 테이블 ID 컬럼 PK조건 확인
		// V) 중복 확인 멘트 출력, 중복된 경우(M) 다시 아이디 입력 받기

		// 비밀번호 설정
		// V) 비밀번호 2번 입력 받기 - Scanner
		// C) 입력한 두 비밀번호 일치 확인
		// C) 불일치할 경우(M) 재설정하도록 다시 입력받기

		// 이메일
		// V) 이메일 입력 받기 - Scanner
		// C) DB MEMBER 테이블 EMAIL 컬럼 UNIQUE조건 확인
		// V) 중복 확인 멘트 출력, 중복된 경우(M) 다시 이메일 입력 받기

		// 이름, 연령대, 성별 입력
		// V) 이름, 연령대, 성별 입력 받기 - Scanner
		// M)

		// 회원가입 완료
		// V) 회원가입 완료 화면 출력
		// C) 입력받은 회원정보 DB MEMBER 테이블에 추가

		// 로그인
		// V) 로그인 화면 출력 

		// C) 로그인 성공 : DB MEMBER 테이블에 등록된 ID와 PW가 일치하면 성공
		// V) 로그인 성공 화면 출력

		// C) 로그인 실패 : DB MEMBER 테이블에 등록된 ID와 PW가 불일치하면 실패
		// V)  로그인 실패 화면 출력

		// V) 게임 룰 설명 출력 - 건너뛰기 기능

		// C) 음악 리스트 불러오기

		// C) 랜덤 음악 선택
		// C) 조건1 : DB MEMBERRANK 테이블에 풀었던 곡이 하나도 없는 경우, 곡 전체 중 랜덤 곡 선택
		// C) 조건2 :  DB MEMBERRANK 테이블에 풀었던 곡이 등록되있는 경우, 그 곡을 제외한 다른 곡 선택

		// C) 선택된 음악에 해당하는 기본 힌트 불러오기 
		// C) 선택된 음악에 해당하는 추가 힌트 불러오기

		
		// V) 반복문(답안 작성 기회 4번) - 작성 답안이 정답이면 break
		// C) 선택한 음악 재생 METHOD -> V) 음악 출력

		// V) 처음 듣는다면, 해당 음악 기본 힌트 출력

		// V) 답안 작성 - Scanner 사용

		// V) 정오답 출력

		// V) 조건 1 : 첫 오답일 경우, 글자 수 제시
		// V) 조건 2 : 두번째 혹은 세번째 오답일 경우, 추가 힌트 목록 제시 후 선택
		// V) 조건 3 : 세번째 오답일 경우, 두번째에 선택했던 힌트 제외한 추가 힌트 목록 제시
		// V) 조건 4 : 네번째 답안 작성 이후 정오답 관계없이 반복문 break
		

		// 개인 결과 출력 -
		// C) DB MEMBERRANK 테이블에 해당 사용자가 등록된 푼 문제 (METHOD) -> V) 모두 출력
		// 전체 순위 출력 -
		// C) DB MEMBER 테이블에 등록된 모든 사용자를 SCORE 내림차순으로 정렬 (METHOD) -> V) 출력

		// 종료
		// V) 종료 화면 출력
		// C)

	}

}
