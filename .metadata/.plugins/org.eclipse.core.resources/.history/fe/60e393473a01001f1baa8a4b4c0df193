package Controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import Model.MemberDTO;

public class MemberDAO {

	// DAta Access Object : 데이터에 접근하는 것을 도와주는 객체
	// DB 연결해서 insert, delete, update, select 하는 코드들의 모음
	// 메소드 형태로 코드를 작성

	private ResultSet rs = null;
	private Connection conn = null;
	private PreparedStatement psmt = null;

	// 공통으로 사용할 메소드
	// 데이터베이스 연결하는 메소드
	private void getConn() {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			String ur1 = "jdbc:oracle:thin:@localhost:1521:xe";
			String user = "service";
			String paaword = "12345";
			conn = DriverManager.getConnection(ur1, user, paaword);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// 사용한 자원 반납하는 메소드
	private void getClose() {
		try {
			if (rs != null)
				rs.close();
			if (psmt != null)
				psmt.close();
			if (conn != null)
				conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	// 회원가입 메소드
	public int join(MemberDTO dto) {
		int row = 0;
		try {
			getConn();
			String sql = "INSERT INTO FULLSTACKMEMBER(ID, PW, NAME, AGE, SCORE) VALUES(?, ?, ?, ?, ?)";
			psmt = conn.prepareStatement(sql);

			psmt.setString(1, dto.getId());
			psmt.setString(2, dto.getPw());
			psmt.setString(3, dto.getName());
			psmt.setInt(4, dto.getAge());
			psmt.setInt(5, dto.getScore());

			row = psmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		return row;
	}

	public String login(MemberDTO dto) {
		String uName = null;
		try {
			getConn();
			String sql = "SELECT * FROM FULLSTACKMEMBER WHERE ID = ? AND PW = ?";
			psmt = conn.prepareStatement(sql);

			psmt.setString(1, dto.getId());
			psmt.setString(2, dto.getPw());

			rs = psmt.executeQuery();

			if (rs.next() == true) {
				uName = rs.getNString("name");
			}

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		return uName;
	}

	public int delete(MemberDTO dto) {
		int rs = 0;
		try {
			getConn();
			String sql = "delete fullstackmember where id = ? and pw = ?";
			psmt = conn.prepareStatement(sql);

			psmt.setString(1, dto.getId());
			psmt.setString(2, dto.getPw());

			rs = psmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		return rs;
	}

	public void selectAll(MemberDTO dto) {
		try {
			getConn();
			String sql = "SELECT * FROM FULLSTACKMEMBER ORDER BY id";
			psmt = conn.prepareStatement(sql);

			rs = psmt.executeQuery();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
	}

	public int update(MemberDTO dto) {
		int rs = 0;
		try {
			getConn();
			String sql = "update fullstackmember set score = ? where id = ? and pw = ? ";
			psmt = conn.prepareStatement(sql);

			psmt.setInt(1, dto.getScore());
			psmt.setString(2, dto.getId());
			psmt.setString(3, dto.getPw());

			rs = psmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			getClose();
		}
		return rs;

	}

}
